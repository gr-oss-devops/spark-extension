name: Publish snapshoot

on:
  # scheduled: 
    push:
      branches: ["master"]

env:
  PYTHON_VERSION: "3.10"

jobs:
  snapshoot:
    name: Release snapshoot Spark:${{ matrix.params.sparkVersion }} - Scala:${{ matrix.params.scalaVersion }}
    if: ${{  github.event_name == 'scheduled' ||  (github.ref == 'refs/heads/master' && github.event_name != 'workflow_dispatch')  }}
    ## if: ${{ !github.event.repository.fork && (github.ref == 'refs/heads/master' || github.event_name == 'scheduled') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - params: {"sparkVersion": "3.0.3", "scalaVersion": "2.12.10"}
          - params: {"sparkVersion": "3.1.3", "scalaVersion": "2.12.10"}
          - params: {"sparkVersion": "3.2.4", "scalaVersion": "2.12.15"}
          - params: {"sparkVersion": "3.3.4", "scalaVersion": "2.12.15"}
          - params: {"sparkVersion": "3.4.2", "scalaVersion": "2.12.17"}
          - params: {"sparkVersion": "3.5.0", "scalaVersion": "2.12.18"}
          - params: {"sparkVersion": "3.2.4", "scalaVersion": "2.13.5"}
          - params: {"sparkVersion": "3.3.4", "scalaVersion": "2.13.8"}
          - params: {"sparkVersion": "3.4.2", "scalaVersion": "2.13.8"}
          - params: {"sparkVersion": "3.5.0", "scalaVersion": "2.13.8"}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'corretto'

      - uses: actions/setup-python@v5 
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-build-${{ matrix.params.sparkVersion }}-${{ matrix.params.scalaVersion }}-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-mvn-build-${{ matrix.params.sparkVersion }}-${{ matrix.params.scalaVersion }}-
      
      - name: Cache Pip packages
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-whl-${{ env.PYTHON_VERSION }}-${{ matrix.params.sparkVersion }}

      - name: Import GPG key
        id: sign
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Check if this is a SNAPSHOT versions
        id: check-snapshoot
        run: |
          if ! grep -q "<version>.*-SNAPSHOT</version>" pom.xml
          then
            echo "Version in pom is not a SNAPSHOT version, cannot test all versions"
            exit 1
          fi

      - name: Release snapshoot Spark:${{ matrix.params.sparkVersion }} - Scala:${{ matrix.params.scalaVersion }}
        id: snapshoot
        run: |

          # required for GitHub CI
          pip3 install virtualenv
          mkdir -p ~/.ivy2

          ./set-version.sh ${{ matrix.params.sparkVersion }} ${{ matrix.params.scalaVersion }}
          mvn clean deploy -Dsign

          # For Scala version 2.12 build the python
          if [[ ${{ matrix.params.scalaVersion }}  == 2.12* ]]; then
              echo "Scala version starts with '2.12'"
              ./build-whl.sh
          fi

          # Test the release
          ./test-release.sh